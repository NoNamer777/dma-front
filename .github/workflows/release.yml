# This workflow will do a clean installation of the Node modules, run tests, create a Docker image
# and releases it to the GitHub Container Registry.

name: release
on:
    release:
        types: [published]

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}
    TARGET_PLATFORM: linux/arm/v7

jobs:
    test:
        uses: nonamer777/dma-front/.github/workflows/build.yml@master
    release-and-build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout the repository
              uses: actions/checkout@v3
            - name: Prepare production environment
              run: |
                  echo "${{ secrets.PROD_ENV }}" > src/environments/environment.prod.ts
            - name: Set up QEMU dependency
              uses: docker/setup-qemu-action@v2
            - name: Set up Docker Buildx
              id: docker_buildx
              uses: docker/setup-buildx-action@v2
            - name: Cache Docker layers
              uses: actions/cache@v3
              with:
                  path: /tmp/.docker-buildx-cache
                  key: ${{ runner.os }}-docker-buildx-${{ github.sha }}
                  restore-keys: |
                      ${{ runner.os }}-docker-buildx-
            - name: Login to Dockerhub
              uses: docker/login-action@v2
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
            - name: Extract metadata for Docker
              id: meta
              uses: docker/metadata-action@v4
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            - name: Build and push
              id: docker_build
              uses: docker/build-push-action@v4
              with:
                  builder: ${{ steps.buildx.outputs.name }}
                  cache-from: type=local,src=/tmp/.docker-buildx-cache
                  cache-to: type=local,dest=/tmp/.docker-buildx-cache-new
                  context: ./
                  file: ./Dockerfile
                  labels: ${{ steps.meta.outputs.labels }}
                  platforms: ${{ env.TARGET_PLATFORM }}
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
            - name: Move cache
              run: |
                  rm -rf /tmp/.docker-buildx-cache
                  mv /tmp/.docker-buildx-cache-new /tmp/.docker-buildx-cache
            - name: Digest image
              run: echo ${{ steps.docker_build.outputs.digest }}
